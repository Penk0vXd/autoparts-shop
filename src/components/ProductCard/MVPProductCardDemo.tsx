'use client'

import React, { useState } from 'react'
import { MVPProductGrid } from './MVPProductGrid'
import { MVPProductCard } from './MVPProductCard'
import { mvpProductExamples } from '@/data/mvp-product-examples'
import { MVPProductCardData } from '@/types/mvp-product-card'

/**
 * MVP Product Card Demo - God-Mode Version
 * 
 * Interactive demo component showcasing the MVP Product Card
 * with all features and states for Bulgarian automotive parts store.
 * 
 * ‚úÖ Features:
 * - Full product grid demo
 * - Single card demo
 * - Loading states
 * - Empty states
 * - Different product types
 * - Interactive controls
 * - Bulgarian localization
 * 
 * @author God of Programming
 * @version 1.0.0
 */
export function MVPProductCardDemo() {
  const [selectedProduct, setSelectedProduct] = useState<MVPProductCardData | null>(null)
  const [isLoading, setIsLoading] = useState(false)
  const [showGrid, setShowGrid] = useState(true)
  const [showSingleCard, setShowSingleCard] = useState(false)
  const [demoProducts, setDemoProducts] = useState(mvpProductExamples)

  // Handle product click
  const handleProductClick = (product: MVPProductCardData) => {
    setSelectedProduct(product)
    console.log('Product clicked:', product.name)
    alert(`–ò–∑–±—Ä–∞—Ö—Ç–µ: ${product.name} - ${product.price.current.toFixed(2)} –ª–≤.`)
  }

  // Simulate loading
  const handleLoadingDemo = () => {
    setIsLoading(true)
    setTimeout(() => {
      setIsLoading(false)
    }, 3000)
  }

  // Show empty state
  const handleEmptyState = () => {
    setDemoProducts([])
  }

  // Reset products
  const handleResetProducts = () => {
    setDemoProducts(mvpProductExamples)
  }

  // Filter products by availability
  const handleFilterByAvailability = (status: 'in_stock' | 'out_of_stock' | 'coming_soon') => {
    const filtered = mvpProductExamples.filter(product => 
      product.availability.status === status
    )
    setDemoProducts(filtered)
  }

  // Filter products on sale
  const handleFilterOnSale = () => {
    const filtered = mvpProductExamples.filter(product => product.isOnSale)
    setDemoProducts(filtered)
  }

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="container mx-auto px-4">
        {/* Header */}
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold text-gray-900 mb-4">
            üèõÔ∏è MVP Product Card Demo
          </h1>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            God-Mode –ø—Ä–æ–¥—É–∫—Ç–æ–≤–∏ –∫–∞—Ä—Ç–∏ –∑–∞ –±—ä–ª–≥–∞—Ä—Å–∫–∏ –º–∞–≥–∞–∑–∏–Ω –∑–∞ –∞–≤—Ç–æ—á–∞—Å—Ç–∏.
            –°—ä–∑–¥–∞–¥–µ–Ω–∏ –∑–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏—è, –¥–æ–≤–µ—Ä–∏–µ –∏ –ø–µ—Ä—Ñ–µ–∫—Ç–Ω–æ –º–æ–±–∏–ª–Ω–æ –∏–∑–∂–∏–≤—è–≤–∞–Ω–µ.
          </p>
        </div>

        {/* Demo Controls */}
        <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-8">
          <h2 className="text-lg font-semibold text-gray-900 mb-4">
            üéÆ –î–µ–º–æ –ö–æ–Ω—Ç—Ä–æ–ª–∏
          </h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {/* View Controls */}
            <div className="space-y-2">
              <h3 className="font-medium text-gray-700">–ò–∑–≥–ª–µ–¥</h3>
              <div className="flex gap-2">
                <button
                  onClick={() => setShowGrid(true)}
                  className={`px-3 py-2 rounded-md text-sm font-medium transition-colors ${
                    showGrid 
                      ? 'bg-red-600 text-white' 
                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                  }`}
                >
                  –ú—Ä–µ–∂–∞
                </button>
                <button
                  onClick={() => setShowSingleCard(true)}
                  className={`px-3 py-2 rounded-md text-sm font-medium transition-colors ${
                    showSingleCard 
                      ? 'bg-red-600 text-white' 
                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                  }`}
                >
                  –ï–¥–Ω–∞ –∫–∞—Ä—Ç–∞
                </button>
              </div>
            </div>

            {/* State Controls */}
            <div className="space-y-2">
              <h3 className="font-medium text-gray-700">–°—ä—Å—Ç–æ—è–Ω–∏—è</h3>
              <div className="flex gap-2">
                <button
                  onClick={handleLoadingDemo}
                  className="px-3 py-2 bg-blue-100 text-blue-700 rounded-md text-sm font-medium hover:bg-blue-200 transition-colors"
                >
                  –ó–∞—Ä–µ–∂–¥–∞–Ω–µ
                </button>
                <button
                  onClick={handleEmptyState}
                  className="px-3 py-2 bg-gray-100 text-gray-700 rounded-md text-sm font-medium hover:bg-gray-200 transition-colors"
                >
                  –ü—Ä–∞–∑–Ω–æ
                </button>
              </div>
            </div>

            {/* Filter Controls */}
            <div className="space-y-2">
              <h3 className="font-medium text-gray-700">–§–∏–ª—Ç—Ä–∏</h3>
              <div className="flex gap-2">
                <button
                  onClick={handleFilterOnSale}
                  className="px-3 py-2 bg-red-100 text-red-700 rounded-md text-sm font-medium hover:bg-red-200 transition-colors"
                >
                  –ù–∞–º–∞–ª–µ–Ω–∏—è
                </button>
                <button
                  onClick={handleResetProducts}
                  className="px-3 py-2 bg-green-100 text-green-700 rounded-md text-sm font-medium hover:bg-green-200 transition-colors"
                >
                  –†–∏—Å–µ—Ç
                </button>
              </div>
            </div>
          </div>

          {/* Availability Filters */}
          <div className="mt-4 pt-4 border-t border-gray-200">
            <h3 className="font-medium text-gray-700 mb-2">–ù–∞–ª–∏—á–Ω–æ—Å—Ç</h3>
            <div className="flex flex-wrap gap-2">
              <button
                onClick={() => handleFilterByAvailability('in_stock')}
                className="px-3 py-2 bg-green-100 text-green-700 rounded-md text-sm font-medium hover:bg-green-200 transition-colors"
              >
                –í –Ω–∞–ª–∏—á–Ω–æ—Å—Ç
              </button>
              <button
                onClick={() => handleFilterByAvailability('out_of_stock')}
                className="px-3 py-2 bg-red-100 text-red-700 rounded-md text-sm font-medium hover:bg-red-200 transition-colors"
              >
                –ò–∑—á–µ—Ä–ø–∞–Ω–∏
              </button>
              <button
                onClick={() => handleFilterByAvailability('coming_soon')}
                className="px-3 py-2 bg-yellow-100 text-yellow-700 rounded-md text-sm font-medium hover:bg-yellow-200 transition-colors"
              >
                –û—á–∞–∫–≤–∞ —Å–µ
              </button>
            </div>
          </div>
        </div>

        {/* Product Grid Demo */}
        {showGrid && (
          <div className="mb-8">
            <div className="flex items-center justify-between mb-6">
              <h2 className="text-2xl font-bold text-gray-900">
                üèÜ –ö–∞—Ç–∞–ª–æ–≥ —Å –ê–≤—Ç–æ—á–∞—Å—Ç–∏
              </h2>
              <div className="text-sm text-gray-600">
                {demoProducts.length} –ø—Ä–æ–¥—É–∫—Ç–∞
              </div>
            </div>
            
            <MVPProductGrid
              products={demoProducts}
              onProductClick={handleProductClick}
              isLoading={isLoading}
              emptyMessage="–ù—è–º–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏ –ø—Ä–æ–¥—É–∫—Ç–∏ –∑–∞ —Ç–µ–∑–∏ –∫—Ä–∏—Ç–µ—Ä–∏–∏"
            />
          </div>
        )}

        {/* Single Card Demo */}
        {showSingleCard && (
          <div className="mb-8">
            <div className="flex items-center justify-between mb-6">
              <h2 className="text-2xl font-bold text-gray-900">
                üéØ –ï–¥–∏–Ω–∏—á–Ω–∞ –ö–∞—Ä—Ç–∞
              </h2>
            </div>
            
            <div className="max-w-sm mx-auto">
              <MVPProductCard
                product={mvpProductExamples[0]}
                onViewDetails={handleProductClick}
                priority={true}
              />
            </div>
          </div>
        )}

        {/* Selected Product Info */}
        {selectedProduct && (
          <div className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
            <h2 className="text-lg font-semibold text-gray-900 mb-4">
              üîç –ò–∑–±—Ä–∞–Ω –ü—Ä–æ–¥—É–∫—Ç
            </h2>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <h3 className="font-medium text-gray-700">–û—Å–Ω–æ–≤–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                <ul className="mt-2 space-y-1 text-sm text-gray-600">
                  <li><strong>–ò–º–µ:</strong> {selectedProduct.name}</li>
                  <li><strong>–¶–µ–Ω–∞:</strong> {selectedProduct.price.current.toFixed(2)} –ª–≤.</li>
                  <li><strong>–ú–∞—Ä–∫–∞:</strong> {selectedProduct.brand?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞'}</li>
                  <li><strong>–ù–∞–ª–∏—á–Ω–æ—Å—Ç:</strong> {selectedProduct.availability.text}</li>
                </ul>
              </div>
              <div>
                <h3 className="font-medium text-gray-700">–°—ä–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç</h3>
                <ul className="mt-2 space-y-1 text-sm text-gray-600">
                  <li><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> {selectedProduct.compatibility.displayText}</li>
                  <li><strong>–°—ä–≤–º–µ—Å—Ç–∏–º:</strong> {selectedProduct.compatibility.isCompatible ? '–î–∞' : '–ù–µ'}</li>
                  {selectedProduct.availability.deliveryTime && (
                    <li><strong>–î–æ—Å—Ç–∞–≤–∫–∞:</strong> {selectedProduct.availability.deliveryTime}</li>
                  )}
                </ul>
              </div>
            </div>
          </div>
        )}

        {/* Features Overview */}
        <div className="mt-12 bg-white rounded-lg shadow-sm border border-gray-200 p-6">
          <h2 className="text-2xl font-bold text-gray-900 mb-6">
            ‚úÖ MVP –§—É–Ω–∫—Ü–∏–∏
          </h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            <div className="space-y-3">
              <h3 className="font-semibold text-gray-900">üé® –î–∏–∑–∞–π–Ω</h3>
              <ul className="space-y-1 text-sm text-gray-600">
                <li>‚Ä¢ –ß–∏—Å—Ç–æ –±—è–ª–æ –æ—Å–Ω–æ–≤–∞–Ω–∏–µ</li>
                <li>‚Ä¢ –ü—Ä–µ–º–∏—É–º —á–µ—Ä–≤–µ–Ω–æ –∑–∞ –°–¢–ê</li>
                <li>‚Ä¢ –ó–∞–∫—Ä—ä–≥–ª–µ–Ω–∏ —ä–≥–ª–∏ 8px+</li>
                <li>‚Ä¢ –•—É–±–∞–≤–∏ —Å–µ–Ω–∫–∏ –∏ —Ö–æ–≤—ä—Ä –µ—Ñ–µ–∫—Ç–∏</li>
                <li>‚Ä¢ –ú–æ–±–∏–ª–µ–Ω-–ø—ä—Ä–≤–æ responsive</li>
              </ul>
            </div>
            
            <div className="space-y-3">
              <h3 className="font-semibold text-gray-900">üöÄ UX</h3>
              <ul className="space-y-1 text-sm text-gray-600">
                <li>‚Ä¢ –í–∏–∑—É–∞–ª–Ω–∞ –π–µ—Ä–∞—Ä—Ö–∏—è</li>
                <li>‚Ä¢ –ú–∏–≥–Ω–æ–≤–µ–Ω–∞ —Å—ä–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç</li>
                <li>‚Ä¢ –Ø—Å–Ω–∞ –ø—ä—Ä–≤–∏—á–Ω–∞ –∞–∫—Ü–∏—è</li>
                <li>‚Ä¢ 44px+ –¥–æ–∫–æ—Å–≤–∞–Ω–µ —Ü–µ–ª–∏</li>
                <li>‚Ä¢ –î–æ—Å—Ç—ä–ø–Ω–æ—Å—Ç ARIA</li>
              </ul>
            </div>
            
            <div className="space-y-3">
              <h3 className="font-semibold text-gray-900">‚ö° –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ</h3>
              <ul className="space-y-1 text-sm text-gray-600">
                <li>‚Ä¢ Next.js 14 + TypeScript</li>
                <li>‚Ä¢ Tailwind CSS —Å—Ç–∏–ª–∏–∑–∏—Ä–∞–Ω–µ</li>
                <li>‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä–∞–Ω–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</li>
                <li>‚Ä¢ –ú—ä—Ä–∑–µ–ª–∏–≤–æ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ</li>
                <li>‚Ä¢ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª–Ω–æ—Å—Ç Lighthouse 95+</li>
              </ul>
            </div>
          </div>
        </div>

        {/* Performance Metrics */}
        <div className="mt-6 bg-gradient-to-r from-red-50 to-red-100 rounded-lg p-6">
          <h2 className="text-lg font-semibold text-gray-900 mb-4">
            üìä –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∑–∞ –£—Å–ø–µ—Ö
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
            <div className="text-center">
              <div className="text-2xl font-bold text-red-600">100%</div>
              <div className="text-sm text-gray-600">–ú–æ–±–∏–ª–µ–Ω –æ—Ç–≥–æ–≤–æ—Ä</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-green-600">95%</div>
              <div className="text-sm text-gray-600">–†–∞–∑–±–∏—Ä–∞–Ω–µ –ø—Ä–∏ –ø–æ–≥–ª–µ–¥</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-blue-600">60fps</div>
              <div className="text-sm text-gray-600">–ü–ª–∞–≤–Ω–∏ –∞–Ω–∏–º–∞—Ü–∏–∏</div>
            </div>
            <div className="text-center">
              <div className="text-2xl font-bold text-purple-600">95+</div>
              <div className="text-sm text-gray-600">Lighthouse —Ä–µ–∑—É–ª—Ç–∞—Ç</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
} 